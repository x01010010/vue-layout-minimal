{
    "openapi": "3.1.0",
    "info": {
        "title": "DSS Transformation Proxy",
        "description": "A simple proxy for the dbt Cloud API.",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/auth/login": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login endpoint",
                "description": "Redirects the user to the Azure AD login page or provides development mode authentication bypass.",
                "operationId": "login_api_v1_auth_login_get",
                "responses": {
                    "307": {
                        "description": "Successful Response"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout endpoint",
                "description": "Logs the user out by clearing their session and redirects to the Azure AD logout page in production.",
                "operationId": "logout_api_v1_auth_logout_get",
                "responses": {
                    "307": {
                        "description": "Successful Response"
                    }
                }
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Current user info",
                "description": "Returns information about the currently authenticated user.",
                "operationId": "get_me_api_v1_auth_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Root",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "summary": "Health Check",
                "operationId": "health_check_healthz_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/jobs/": {
            "get": {
                "tags": [
                    "dbt Cloud jobs"
                ],
                "summary": "List Jobs",
                "description": "List all dbt Cloud jobs.\n\nReturns:\n    Response: JSON object containing a list of dbt Cloud jobs, each with metadata and configuration.\n    Example response:\n        {\n            \"data\": [\n                {\n                    \"id\": 456,\n                    \"name\": \"My Job\",\n                    \"environment_id\": 123,\n                    ...\n                },\n                ...\n            ],\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If no jobs are found, returns an empty list in the \"data\" field.",
                "operationId": "list_jobs_api_v1_dbt_jobs__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "dbt Cloud jobs"
                ],
                "summary": "Create Job",
                "description": "Create a new dbt Cloud job.\n\nRequest Body (JobCreate):\n    - name (str): The name of the job\n    - environment_id (int): The environment ID\n    - ... (other job fields)\n\nExample request payload:\n    {\n        \"name\": \"My Job\",\n        \"environment_id\": 123,\n        ...\n    }\n\nReturns:\n    Response: The created job object as JSON, including job metadata and configuration.\n    Example response:\n        {\n            \"data\": {\n                \"id\": 456,\n                \"name\": \"My Job\",\n                \"environment_id\": 123,\n                ...\n            },\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If creation fails, returns an error response from dbt Cloud.",
                "operationId": "create_job_api_v1_dbt_jobs__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/jobs/{job_id}": {
            "get": {
                "tags": [
                    "dbt Cloud jobs"
                ],
                "summary": "Get Job",
                "description": "Retrieve a specific dbt Cloud job by ID.\n\nArgs:\n    job_id (int): The ID of the job to retrieve.\n\nReturns:\n    Response: The job object as JSON, including job metadata and configuration.\n    Example response:\n        {\n            \"data\": {\n                \"id\": 456,\n                \"name\": \"My Job\",\n                \"environment_id\": 123,\n                ...\n            },\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If the job is not found, returns an error response from dbt Cloud.",
                "operationId": "get_job_api_v1_dbt_jobs__job_id__get",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Job Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "dbt Cloud jobs"
                ],
                "summary": "Delete Job",
                "description": "Delete a specific dbt Cloud job by ID.\n\nArgs:\n    job_id (int): The ID of the job to delete.\n\nReturns:\n    Response: JSON object indicating deletion status. On success, returns a confirmation message or the deleted job object.\n    Example response:\n        {\n            \"data\": {\n                \"id\": 456,\n                \"deleted\": true,\n                ...\n            },\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If the job cannot be deleted, returns an error response from dbt Cloud.",
                "operationId": "delete_job_api_v1_dbt_jobs__job_id__delete",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Job Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/jobs/{job_id}/": {
            "post": {
                "tags": [
                    "dbt Cloud jobs"
                ],
                "summary": "Update Job",
                "description": "Update a specific dbt Cloud job by ID.\n\nArgs:\n    job_id (int): The ID of the job to update.\n    payload (JobUpdate): The updated job data.\n\nExample request payload:\n    {\n        \"name\": \"Updated Job Name\",\n        ...\n    }\n\nReturns:\n    Response: The updated job object as JSON, including job metadata and configuration.\n    Example response:\n        {\n            \"data\": {\n                \"id\": 456,\n                \"name\": \"Updated Job Name\",\n                ...\n            },\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If the update fails, returns an error response from dbt Cloud.",
                "operationId": "update_job_api_v1_dbt_jobs__job_id___post",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Job Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/jobs/{job_id}/trigger": {
            "post": {
                "tags": [
                    "dbt Cloud jobs"
                ],
                "summary": "Trigger Job Run",
                "description": "Trigger a run for a specific dbt Cloud job.\n\nArgs:\n    job_id (int): The ID of the job to trigger.\n    payload (dict): The run parameters.\n\nExample request payload:\n    {\n        \"cause\": \"Manual trigger from API\",\n        ...\n    }\n\nReturns:\n    Response: The triggered run object as JSON, including run metadata and status.\n    Example response:\n        {\n            \"data\": {\n                \"id\": 789,\n                \"job_id\": 456,\n                \"status\": 1,\n                ...\n            },\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If the trigger fails, returns an error response from dbt Cloud.",
                "operationId": "trigger_job_run_api_v1_dbt_jobs__job_id__trigger_post",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Job Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true,
                                "title": "Payload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/jobs/{job_id}/artifacts/{path}": {
            "get": {
                "tags": [
                    "dbt Cloud job-artifacts"
                ],
                "summary": "Get Job Artifact",
                "description": "Retrieve an artifact file from a specific dbt Cloud job.\n\nArgs:\n    job_id (int): The ID of the job.\n    path (str): The artifact file path (e.g., \"manifest.json\").\n    \nReturns:\n    Response: The artifact file as JSON or text, depending on the file type.\n    Example response (for manifest.json):\n        {\n            \"nodes\": { ... },\n            \"metadata\": { ... },\n            ...\n        }\n    For other artifact types, the response may be plain text or binary content.\n    If the artifact is not found, returns an error response from dbt Cloud.",
                "operationId": "get_job_artifact_api_v1_dbt_jobs__job_id__artifacts__path__get",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Job Id"
                        }
                    },
                    {
                        "name": "path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Path"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/runs/": {
            "get": {
                "tags": [
                    "dbt Cloud runs"
                ],
                "summary": "List Runs",
                "description": "List all dbt Cloud runs.\n\nReturns:\n    Response: JSON object containing a list of dbt Cloud runs, each with metadata, status, and results.\n    Example response:\n        {\n            \"data\": [\n                {\n                    \"id\": 12345,\n                    \"status\": 10,\n                    \"project_id\": 6789,\n                    \"environment_id\": 1111,\n                    \"trigger\": { ... },\n                    \"created_at\": \"2024-06-01T12:00:00Z\",\n                    ...\n                },\n                ...\n            ],\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If no runs are found, returns an empty list in the \"data\" field.",
                "operationId": "list_runs_api_v1_dbt_runs__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/runs/{run_id}": {
            "get": {
                "tags": [
                    "dbt Cloud runs"
                ],
                "summary": "Get Run",
                "description": "Retrieve a specific dbt Cloud run by ID.\n\nArgs:\n    run_id: The ID of the run to retrieve.\n\nReturns:\n    Response: JSON object representing the dbt Cloud run, including run metadata, status, and results.\n    Example response:\n        {\n            \"data\": {\n                \"id\": 12345,\n                \"status\": 10,\n                \"project_id\": 6789,\n                \"environment_id\": 1111,\n                \"trigger\": { ... },\n                \"created_at\": \"2024-06-01T12:00:00Z\",\n                ...\n            },\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If the run is not found, returns an error response from dbt Cloud.",
                "operationId": "get_run_api_v1_dbt_runs__run_id__get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/runs/{run_id}/cancel": {
            "post": {
                "tags": [
                    "dbt Cloud runs"
                ],
                "summary": "Cancel Run",
                "description": "Cancel a specific dbt Cloud run by ID.\n\nArgs:\n    run_id (int): The ID of the run to cancel.\n\nReturns:\n    Response: JSON object indicating the cancellation status. On success, returns the updated run object with status reflecting cancellation.\n    Example response:\n        {\n            \"data\": {\n                \"id\": 12345,\n                \"status\": 30,  # Status code for cancelled\n                ...\n            },\n            \"status\": { ... },\n            \"extra\": { ... }\n        }\n    If the run cannot be cancelled, returns an error response from dbt Cloud.",
                "operationId": "cancel_run_api_v1_dbt_runs__run_id__cancel_post",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/runs/{run_id}/artifacts/{path}": {
            "get": {
                "tags": [
                    "dbt Cloud runs"
                ],
                "summary": "Get Run Artifact",
                "description": "Retrieve an artifact file from a specific dbt Cloud run.\n\nArgs:\n    run_id (int): The ID of the run.\n    path (str): The artifact file path (e.g., \"manifest.json\").\n\nReturns:\n    Response: The artifact file as JSON or text, depending on the file type. If the artifact is not found, returns an error response from dbt Cloud.\n    Example response (for manifest.json):\n        {\n            \"nodes\": { ... },\n            \"metadata\": { ... },\n            ...\n        }\n    For other artifact types, the response may be plain text or binary content.",
                "operationId": "get_run_artifact_api_v1_dbt_runs__run_id__artifacts__path__get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Run Id"
                        }
                    },
                    {
                        "name": "path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Path"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/runs/run_summaries": {
            "get": {
                "tags": [
                    "dbt Cloud runs"
                ],
                "summary": "Run Summaries",
                "description": "Returns a summary of dbt Cloud runs.\nCaches the result for 60 seconds. Cache key includes all query parameters.",
                "operationId": "run_summaries_api_v1_dbt_runs_run_summaries_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/webhooks/": {
            "get": {
                "tags": [
                    "dbt Cloud webhooks"
                ],
                "summary": "List Webhooks",
                "description": "List all dbt Cloud webhook subscriptions in the account.\n\nReturns:\n    List of webhook subscriptions (proxied from dbt Cloud)",
                "operationId": "list_webhooks_api_v1_dbt_webhooks__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "dbt Cloud webhooks"
                ],
                "summary": "Create Webhook",
                "description": "Create a new dbt Cloud webhook subscription.\n\nRequest Body (WebhookCreate):\n    - name (str): The name of the webhook\n    - event_types (List[str]): List of event types to subscribe to\n    - url (str): The webhook target URL\n    - active (bool): Whether the webhook is active\n\nExample request payload:\n    {\n        \"name\": \"My Webhook\",\n        \"event_types\": [\"job.run.completed\"],\n        \"url\": \"https://example.com/webhook\",\n        \"active\": true\n    }\n\nReturns:\n    The created webhook subscription (proxied from dbt Cloud)",
                "operationId": "create_webhook_api_v1_dbt_webhooks__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/webhooks/{webhook_id}": {
            "get": {
                "tags": [
                    "dbt Cloud webhooks"
                ],
                "summary": "Get Webhook",
                "description": "Retrieve a specific dbt Cloud webhook subscription by its ID.\n\nArgs:\n    webhook_id (str): The webhook subscription ID\n\nReturns:\n    The webhook subscription details (proxied from dbt Cloud)",
                "operationId": "get_webhook_api_v1_dbt_webhooks__webhook_id__get",
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Webhook Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "dbt Cloud webhooks"
                ],
                "summary": "Update Webhook",
                "description": "Update a specific dbt Cloud webhook subscription.\n\nArgs:\n    webhook_id (str): The webhook subscription ID\n\nRequest Body (WebhookUpdate):\n    - name (str, optional): The new name of the webhook\n    - event_types (List[str], optional): Updated event types\n    - url (str, optional): Updated webhook target URL\n    - active (bool, optional): Whether the webhook is active\n\nExample request payload:\n    {\n        \"name\": \"Updated Webhook\",\n        \"event_types\": [\"job.run.completed\"],\n        \"url\": \"https://example.com/webhook\",\n        \"active\": false\n    }\n\nReturns:\n    The updated webhook subscription (proxied from dbt Cloud)",
                "operationId": "update_webhook_api_v1_dbt_webhooks__webhook_id__post",
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Webhook Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "dbt Cloud webhooks"
                ],
                "summary": "Delete Webhook",
                "description": "Delete a specific dbt Cloud webhook subscription by its ID.\n\nArgs:\n    webhook_id (str): The webhook subscription ID\n\nReturns:\n    The deletion result (proxied from dbt Cloud)",
                "operationId": "delete_webhook_api_v1_dbt_webhooks__webhook_id__delete",
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Webhook Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/groups/": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "List Groups",
                "description": "List all dbt Cloud groups in the account.\n\nReturns:\n    JSON list of dbt Cloud groups.",
                "operationId": "list_groups_api_v1_dbt_groups__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "groups"
                ],
                "summary": "Create Group",
                "description": "Create a new dbt Cloud group.\n\nRequest body:\n    - GroupCreate: The group details.\n\nReturns:\n    The created group object.",
                "operationId": "create_group_api_v1_dbt_groups__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/groups/{group_id}": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Get Group",
                "description": "Retrieves a specific dbt Cloud group.\n\nReturns:\n    The requested group object.",
                "operationId": "get_group_api_v1_dbt_groups__group_id__get",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Group Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "groups"
                ],
                "summary": "Update Group",
                "description": "Updates a specific dbt Cloud group.\n\nRequest body:\n    - GroupUpdate: The updated group details.\n\nReturns:\n    The updated group object.",
                "operationId": "update_group_api_v1_dbt_groups__group_id__post",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Group Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "groups"
                ],
                "summary": "Delete Group",
                "description": "Deletes a specific dbt Cloud group.\n\nReturns:\n    A success message or status.",
                "operationId": "delete_group_api_v1_dbt_groups__group_id__delete",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Group Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/groups/sso-groups": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "List Sso Groups",
                "description": "List all SSO group mappings in the dbt Cloud account.\n\nThis endpoint retrieves all SSO group mappings that have been created between \nidentity provider groups and dbt Cloud groups.\n\nReturns:\n    JSON list of SSO group mappings.",
                "operationId": "list_sso_groups_api_v1_dbt_groups_sso_groups_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "groups"
                ],
                "summary": "Create Sso Groups",
                "description": "Create SSO group mappings between identity provider groups and dbt Cloud groups.\n\nThis endpoint creates groups in dbt Cloud that are automatically mapped to SSO identity \nprovider groups. When users authenticate via SSO, they will be automatically added to\nthe corresponding groups in dbt Cloud based on their group membership in the IdP.\n\nRequest body:\n    - List[SSOGroupMapping]: List of SSO group mappings to create.\n    Example:\n        [\n            {\n                \"sso_group_name\": \"azure-ad-analysts\",\n                \"group_name\": \"dbt Analysts\",\n                \"description\": \"Group for analytics team members\"\n            },\n            {\n                \"sso_group_name\": \"azure-ad-developers\",\n                \"group_name\": \"dbt Developers\",\n                \"description\": \"Group for data engineers\"\n            }\n        ]\n        \nReturns:\n    The created SSO group mappings.",
                "operationId": "create_sso_groups_api_v1_dbt_groups_sso_groups_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/SSOGroupMapping"
                                },
                                "type": "array",
                                "title": "Mappings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/groups/sso-groups/{sso_group_id}": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Get Sso Group",
                "description": "Retrieves a specific SSO group mapping.\n\nThis endpoint retrieves details about a specific SSO group mapping between an\nidentity provider group and a dbt Cloud group.\n\nReturns:\n    The requested SSO group mapping object.",
                "operationId": "get_sso_group_api_v1_dbt_groups_sso_groups__sso_group_id__get",
                "parameters": [
                    {
                        "name": "sso_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Sso Group Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "groups"
                ],
                "summary": "Update Sso Group",
                "description": "Updates a specific SSO group mapping.\n\nThis endpoint updates an existing SSO group mapping between an identity provider\ngroup and a dbt Cloud group.\n\nRequest body:\n    - SSOGroupUpdate: The updated SSO group mapping details.\n    Example:\n        {\n            \"sso_group_name\": \"azure-ad-analysts-updated\",\n            \"group_name\": \"dbt Analysts Updated\",\n            \"description\": \"Updated group for analytics team members\"\n        }\n\nReturns:\n    The updated SSO group mapping object.",
                "operationId": "update_sso_group_api_v1_dbt_groups_sso_groups__sso_group_id__post",
                "parameters": [
                    {
                        "name": "sso_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Sso Group Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SSOGroupUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "groups"
                ],
                "summary": "Delete Sso Group",
                "description": "Deletes a specific SSO group mapping.\n\nThis endpoint removes a mapping between an identity provider group and a dbt Cloud group.\nNote that this does not delete the dbt Cloud group itself, only the SSO mapping.\n\nReturns:\n    A success message or status.",
                "operationId": "delete_sso_group_api_v1_dbt_groups_sso_groups__sso_group_id__delete",
                "parameters": [
                    {
                        "name": "sso_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Sso Group Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/audit-logs/": {
            "get": {
                "tags": [
                    "audit-logs"
                ],
                "summary": "List Audit Logs",
                "description": "List all dbt Cloud audit logs in the account.\n\nReturns:\n    JSON list of dbt Cloud audit logs.",
                "operationId": "list_audit_logs_api_v1_dbt_audit_logs__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/service-tokens/": {
            "get": {
                "tags": [
                    "service-tokens"
                ],
                "summary": "List Service Tokens",
                "description": "Lists all dbt Cloud service tokens.",
                "operationId": "list_service_tokens_api_v1_dbt_service_tokens__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "service-tokens"
                ],
                "summary": "Create Service Token",
                "description": "Creates a new dbt Cloud service token.",
                "operationId": "create_service_token_api_v1_dbt_service_tokens__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceTokenCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/service-tokens/{token_id}": {
            "get": {
                "tags": [
                    "service-tokens"
                ],
                "summary": "Get Service Token",
                "description": "Retrieves a specific dbt Cloud service token.",
                "operationId": "get_service_token_api_v1_dbt_service_tokens__token_id__get",
                "parameters": [
                    {
                        "name": "token_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Token Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "service-tokens"
                ],
                "summary": "Update Service Token",
                "description": "Updates a specific dbt Cloud service token.",
                "operationId": "update_service_token_api_v1_dbt_service_tokens__token_id__post",
                "parameters": [
                    {
                        "name": "token_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Token Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceTokenUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "service-tokens"
                ],
                "summary": "Delete Service Token",
                "description": "Deletes a specific dbt Cloud service token.",
                "operationId": "delete_service_token_api_v1_dbt_service_tokens__token_id__delete",
                "parameters": [
                    {
                        "name": "token_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Token Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/license-maps/": {
            "get": {
                "tags": [
                    "license-maps"
                ],
                "summary": "List License Maps",
                "description": "List all license mappings in the dbt Cloud account.\n\nLicense mappings associate license types with specific groups in dbt Cloud,\ndetermining what permissions users in those groups have.\n\nReturns:\n    JSON list of license mappings.",
                "operationId": "list_license_maps_api_v1_dbt_license_maps__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "license-maps"
                ],
                "summary": "Create License Map",
                "description": "Create a new license mapping.\n\nThis endpoint creates a new mapping between a license type and a dbt Cloud group.\n\nRequest body:\n    - LicenseMapCreate: The license mapping details to create.\n    Example:\n        {\n            \"license_type\": \"developer\",\n            \"group_id\": 123\n        }\n        \nReturns:\n    The created license mapping object.",
                "operationId": "create_license_map_api_v1_dbt_license_maps__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseMapCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/license-maps/{license_map_id}": {
            "get": {
                "tags": [
                    "license-maps"
                ],
                "summary": "Get License Map",
                "description": "Retrieves a specific license mapping.\n\nReturns:\n    The requested license mapping object.",
                "operationId": "get_license_map_api_v1_dbt_license_maps__license_map_id__get",
                "parameters": [
                    {
                        "name": "license_map_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "License Map Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "license-maps"
                ],
                "summary": "Update License Map",
                "description": "Updates a specific license mapping.\n\nRequest body:\n    - LicenseMapUpdate: The updated license mapping details.\n    Example:\n        {\n            \"license_type\": \"read_only\",\n            \"group_id\": 456\n        }\n\nReturns:\n    The updated license mapping object.",
                "operationId": "update_license_map_api_v1_dbt_license_maps__license_map_id__post",
                "parameters": [
                    {
                        "name": "license_map_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "License Map Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseMapUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "license-maps"
                ],
                "summary": "Delete License Map",
                "description": "Deletes a specific license mapping.\n\nReturns:\n    A success message or status.",
                "operationId": "delete_license_map_api_v1_dbt_license_maps__license_map_id__delete",
                "parameters": [
                    {
                        "name": "license_map_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "License Map Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/invites/": {
            "get": {
                "tags": [
                    "invites"
                ],
                "summary": "List Invites",
                "description": "List all pending user invites in the dbt Cloud account.\n\nReturns:\n    JSON list of pending user invites.",
                "operationId": "list_invites_api_v1_dbt_invites__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "invites"
                ],
                "summary": "Create Invite",
                "description": "Create a new user invite for dbt Cloud.\n\nThis endpoint sends an invitation email to a user to join a dbt Cloud account.\n\nRequest body:\n    - UserInvite: The user invite details.\n    Example:\n        {\n            \"email\": \"user@example.com\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"group_ids\": [123, 456]\n        }\n        \nReturns:\n    The created user invite object.",
                "operationId": "create_invite_api_v1_dbt_invites__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInvite"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/invites/batch": {
            "post": {
                "tags": [
                    "invites"
                ],
                "summary": "Create Invite Batch",
                "description": "Create multiple user invites for dbt Cloud in a single batch operation.\n\nThis endpoint sends invitation emails to multiple users to join a dbt Cloud account.\n\nRequest body:\n    - UserInviteBatch: The batch of user invite details.\n    Example:\n        {\n            \"invites\": [\n                {\n                    \"email\": \"user1@example.com\",\n                    \"first_name\": \"John\",\n                    \"last_name\": \"Doe\",\n                    \"group_ids\": [123, 456]\n                },\n                {\n                    \"email\": \"user2@example.com\",\n                    \"first_name\": \"Jane\",\n                    \"last_name\": \"Smith\",\n                    \"group_ids\": [123]\n                }\n            ]\n        }\n        \nReturns:\n    The created user invite objects.",
                "operationId": "create_invite_batch_api_v1_dbt_invites_batch_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInviteBatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/invites/{invite_id}": {
            "get": {
                "tags": [
                    "invites"
                ],
                "summary": "Get Invite",
                "description": "Retrieves a specific user invite.\n\nReturns:\n    The requested user invite object.",
                "operationId": "get_invite_api_v1_dbt_invites__invite_id__get",
                "parameters": [
                    {
                        "name": "invite_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Invite Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "invites"
                ],
                "summary": "Delete Invite",
                "description": "Deletes (cancels) a specific user invite.\n\nReturns:\n    A success message or status.",
                "operationId": "delete_invite_api_v1_dbt_invites__invite_id__delete",
                "parameters": [
                    {
                        "name": "invite_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Invite Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}/repositories/": {
            "post": {
                "tags": [
                    "dbt Cloud repositories"
                ],
                "summary": "Create Repository",
                "description": "Create a new dbt Cloud repository for a project.\n\nRequest body:\n    - RepositoryCreate: The repository details.\n\nReturns:\n    The created repository object.",
                "operationId": "create_repository_api_v1_dbt_projects__project_id__repositories__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "dbt Cloud repositories"
                ],
                "summary": "List Repositories",
                "description": "List all dbt Cloud repositories for a project.\n\nReturns:\n    JSON list of dbt Cloud repositories for the project.",
                "operationId": "list_repositories_api_v1_dbt_projects__project_id__repositories__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}/repositories/{repository_id}": {
            "get": {
                "tags": [
                    "dbt Cloud repositories"
                ],
                "summary": "Get Repository",
                "description": "Retrieves a specific dbt Cloud repository.\n\nReturns:\n    The requested repository object.",
                "operationId": "get_repository_api_v1_dbt_projects__project_id__repositories__repository_id__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "repository_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Repository Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "dbt Cloud repositories"
                ],
                "summary": "Update Repository",
                "description": "Updates a specific dbt Cloud repository.\n\nRequest body:\n    - RepositoryUpdate: The updated repository details.\n\nReturns:\n    The updated repository object.",
                "operationId": "update_repository_api_v1_dbt_projects__project_id__repositories__repository_id__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "repository_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Repository Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "dbt Cloud repositories"
                ],
                "summary": "Delete Repository",
                "description": "Deletes a specific dbt Cloud repository.\n\nReturns:\n    A success message or status.",
                "operationId": "delete_repository_api_v1_dbt_projects__project_id__repositories__repository_id__delete",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "repository_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Repository Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}/environments/": {
            "post": {
                "tags": [
                    "environments"
                ],
                "summary": "Create Environment",
                "description": "Create a new dbt Cloud environment for a project.\n\nRequest body:\n    - EnvironmentCreate: The environment details.\n\nReturns:\n    The created environment object.",
                "operationId": "create_environment_api_v1_dbt_projects__project_id__environments__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "environments"
                ],
                "summary": "List Environments",
                "description": "List all dbt Cloud environments for a project.\n\nReturns:\n    JSON list of dbt Cloud environments for the project.",
                "operationId": "list_environments_api_v1_dbt_projects__project_id__environments__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}/environments/{environment_id}": {
            "get": {
                "tags": [
                    "environments"
                ],
                "summary": "Get Environment",
                "description": "Retrieves a specific dbt Cloud environment.\n\nReturns:\n    The requested environment object.",
                "operationId": "get_environment_api_v1_dbt_projects__project_id__environments__environment_id__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "environment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Environment Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "environments"
                ],
                "summary": "Update Environment",
                "description": "Updates a specific dbt Cloud environment.\n\nRequest body:\n    - EnvironmentUpdate: The updated environment details.\n\nReturns:\n    The updated environment object.",
                "operationId": "update_environment_api_v1_dbt_projects__project_id__environments__environment_id__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "environment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Environment Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "environments"
                ],
                "summary": "Delete Environment",
                "description": "Deletes a specific dbt Cloud environment.\n\nReturns:\n    A success message or object.",
                "operationId": "delete_environment_api_v1_dbt_projects__project_id__environments__environment_id__delete",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "environment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Environment Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}/credentials/": {
            "post": {
                "tags": [
                    "credentials"
                ],
                "summary": "Create Credential",
                "description": "Create a new dbt Cloud credential for a project.\n\nRequest body:\n    - CredentialCreate: The credential details.\n\nReturns:\n    The created credential object.",
                "operationId": "create_credential_api_v1_dbt_projects__project_id__credentials__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CredentialCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "credentials"
                ],
                "summary": "List Credentials",
                "description": "List all dbt Cloud credentials for a project.\n\nReturns:\n    JSON list of dbt Cloud credentials for the project.",
                "operationId": "list_credentials_api_v1_dbt_projects__project_id__credentials__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}/credentials/{credential_id}": {
            "get": {
                "tags": [
                    "credentials"
                ],
                "summary": "Get Credential",
                "description": "Retrieves a specific dbt Cloud credential.\n\nReturns:\n    The requested credential object.",
                "operationId": "get_credential_api_v1_dbt_projects__project_id__credentials__credential_id__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "credentials"
                ],
                "summary": "Update Credential",
                "description": "Updates a specific dbt Cloud credential.\n\nRequest body:\n    - CredentialUpdate: The updated credential details.\n\nReturns:\n    The updated credential object.",
                "operationId": "update_credential_api_v1_dbt_projects__project_id__credentials__credential_id__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CredentialUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "credentials"
                ],
                "summary": "Delete Credential",
                "description": "Deletes a specific dbt Cloud credential.\n\nReturns:\n    A success message or status.",
                "operationId": "delete_credential_api_v1_dbt_projects__project_id__credentials__credential_id__delete",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}/connections/": {
            "get": {
                "tags": [
                    "connections"
                ],
                "summary": "List Project Connections",
                "description": "List all connections for a dbt Cloud project.\n\nArgs:\n    project_id: The ID of the project to retrieve connections for.\n\nReturns:\n    JSON list of connections for the specified project.\n    Example response:\n        {\n            \"data\": [\n                {\n                    \"id\": 12345,\n                    \"project_id\": 6789,\n                    \"name\": \"Production Snowflake\",\n                    \"type\": \"snowflake\",\n                    \"created_at\": \"2024-06-01T12:00:00Z\",\n                    \"updated_at\": \"2024-06-01T12:00:00Z\",\n                    \"details\": {\n                        \"account\": \"myaccount\",\n                        \"database\": \"MYDB\",\n                        \"warehouse\": \"COMPUTE_WH\",\n                        ...\n                    }\n                },\n                ...\n            ],\n            \"status\": { ... },\n            \"extra\": { ... }\n        }",
                "operationId": "list_project_connections_api_v1_dbt_projects__project_id__connections__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "connections"
                ],
                "summary": "Create Project Connection",
                "description": "Create a new connection for a dbt Cloud project.\n\nArgs:\n    project_id: The ID of the project.\n    payload: The connection details.\n\nRequest body:\n    - ConnectionCreate: The connection details.\n    Example:\n        {\n            \"name\": \"Production Snowflake\",\n            \"type\": \"snowflake\",\n            \"details\": {\n                \"account\": \"myaccount\",\n                \"database\": \"MYDB\",\n                \"warehouse\": \"COMPUTE_WH\",\n                \"schema\": \"MYSCHEMA\",\n                \"role\": \"ANALYST_ROLE\"\n            }\n        }\n\nReturns:\n    The created connection object.",
                "operationId": "create_project_connection_api_v1_dbt_projects__project_id__connections__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}/connections/{connection_id}": {
            "get": {
                "tags": [
                    "connections"
                ],
                "summary": "Get Project Connection",
                "description": "Retrieve a specific connection for a dbt Cloud project by ID.\n\nArgs:\n    project_id: The ID of the project.\n    connection_id: The ID of the connection to retrieve.\n\nReturns:\n    The connection object.\n    Example response:\n        {\n            \"data\": {\n                \"id\": 12345,\n                \"project_id\": 6789,\n                \"name\": \"Production Snowflake\",\n                \"type\": \"snowflake\",\n                \"created_at\": \"2024-06-01T12:00:00Z\",\n                \"updated_at\": \"2024-06-01T12:00:00Z\",\n                \"details\": {\n                    \"account\": \"myaccount\",\n                    \"database\": \"MYDB\",\n                    \"warehouse\": \"COMPUTE_WH\",\n                    ...\n                }\n            },\n            \"status\": { ... },\n            \"extra\": { ... }\n        }",
                "operationId": "get_project_connection_api_v1_dbt_projects__project_id__connections__connection_id__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "connections"
                ],
                "summary": "Update Project Connection",
                "description": "Update a connection for a dbt Cloud project.\n\nArgs:\n    project_id: The ID of the project.\n    connection_id: The ID of the connection to update.\n    payload: The updated connection data.\n\nRequest body:\n    - ConnectionUpdate: The connection details to update.\n    Example:\n        {\n            \"name\": \"Updated Snowflake Connection\",\n            \"details\": {\n                \"warehouse\": \"NEW_COMPUTE_WH\"\n            }\n        }\n\nReturns:\n    The updated connection object.",
                "operationId": "update_project_connection_api_v1_dbt_projects__project_id__connections__connection_id__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Connection Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "connections"
                ],
                "summary": "Delete Project Connection",
                "description": "Delete a connection for a dbt Cloud project.\n\nArgs:\n    project_id: The ID of the project.\n    connection_id: The ID of the connection to delete.\n\nReturns:\n    A success message or status code.",
                "operationId": "delete_project_connection_api_v1_dbt_projects__project_id__connections__connection_id__delete",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "List Projects",
                "description": "List all dbt Cloud projects using pagination.\n\nReturns:\n    JSON list of all dbt Cloud projects.",
                "operationId": "list_projects_api_v1_dbt_projects__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "summary": "Create Project",
                "description": "Create a new dbt Cloud project.\n\nRequest body:\n    - ProjectCreate: The project details.\n\nReturns:\n    The created project object.",
                "operationId": "create_project_api_v1_dbt_projects__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/projects/{project_id}": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "Get Project",
                "description": "Retrieve a specific dbt Cloud project by ID.\n\nArgs:\n    project_id: The ID of the project to retrieve.\n\nReturns:\n    The project object.",
                "operationId": "get_project_api_v1_dbt_projects__project_id__get",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "summary": "Update Project",
                "description": "Update a dbt Cloud project by ID.\n\nArgs:\n    project_id: The ID of the project to update.\n    payload: The updated project data.\n\nReturns:\n    The updated project object.",
                "operationId": "update_project_api_v1_dbt_projects__project_id__post",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "summary": "Delete Project",
                "description": "Delete a dbt Cloud project by ID.\n\nThis permanently removes the project and all associated resources (environments, \nconnections, repositories, etc.) from dbt Cloud. This action cannot be undone.\n\nArgs:\n    project_id: The ID of the project to delete.\n\nReturns:\n    A success message or status code indicating the project was deleted.",
                "operationId": "delete_project_api_v1_dbt_projects__project_id__delete",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/users/": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "List Users",
                "operationId": "list_users_api_v1_dbt_users__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/users/{user_id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User",
                "operationId": "get_user_api_v1_dbt_users__user_id__get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Update User",
                "operationId": "update_user_api_v1_dbt_users__user_id__post",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete User",
                "operationId": "delete_user_api_v1_dbt_users__user_id__delete",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/accounts/{account_id}": {
            "get": {
                "tags": [
                    "general"
                ],
                "summary": "Get Account",
                "description": "Retrieves a specific dbt Cloud account.\n\nReturns:\n    The requested account object.",
                "operationId": "get_account_api_v1_dbt_accounts__account_id__get",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Account Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dbt/constants": {
            "get": {
                "tags": [
                    "general"
                ],
                "summary": "Get Constants",
                "description": "Retrieves dbt Cloud system constants such as available adapters, project connection types, etc.\nAlso includes custom constants for the application like job status metadata.\n\nNote: This endpoint proxies to the dbt Cloud v2 API since constants endpoint \nis only available in v2, not v3.\n\nReturns:\n    JSON object containing system constants.",
                "operationId": "get_constants_api_v1_dbt_constants_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/pims/entitlements": {
            "post": {
                "tags": [
                    "Admin - PIMS"
                ],
                "summary": "Create Entitlements",
                "operationId": "create_entitlements_api_v1_admin_pims_entitlements_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitlementRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntitlementResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/snowflake/connect": {
            "post": {
                "tags": [
                    "Snowflake"
                ],
                "summary": "Connect Snowflake",
                "operationId": "connect_snowflake_api_v1_admin_snowflake_connect_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SnowflakeConnectionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/snowflake/verify-database": {
            "post": {
                "tags": [
                    "Snowflake"
                ],
                "summary": "Verify Database",
                "operationId": "verify_database_api_v1_admin_snowflake_verify_database_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyDatabaseInputRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/datacloud/provision-infra": {
            "post": {
                "tags": [
                    "Datacloud"
                ],
                "summary": "Provision Infra",
                "operationId": "provision_infra_api_v1_admin_datacloud_provision_infra_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Infra"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProvisionInfraResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/create-secret": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Create Secret",
                "operationId": "create_secret_api_v1_admin_github_create_secret_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSecretRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/create-branch": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Create Branch",
                "operationId": "create_branch_api_v1_admin_github_create_branch_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBranchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/create-pull-request": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Create Pull Request",
                "operationId": "create_pull_request_api_v1_admin_github_create_pull_request_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePullRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/check-secret-exists": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Check Secret Exists",
                "operationId": "check_secret_exists_api_v1_admin_github_check_secret_exists_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecretRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/create-file": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Create File",
                "operationId": "create_file_api_v1_admin_github_create_file_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/create-repo": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Create Repo",
                "operationId": "create_repo_api_v1_admin_github_create_repo_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepoRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/create-variable": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Create Variable",
                "operationId": "create_variable_api_v1_admin_github_create_variable_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VariableRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/delete-branch": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Delete Branch",
                "operationId": "delete_branch_api_v1_admin_github_delete_branch_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteBranchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/dispatch-workflow-event": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Dispatch Workflow Event",
                "operationId": "dispatch_workflow_event_api_v1_admin_github_dispatch_workflow_event_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDispatchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/get-branch": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Get Branch",
                "operationId": "get_branch_api_v1_admin_github_get_branch_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/get-branches": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Get Branches",
                "operationId": "get_branches_api_v1_admin_github_get_branches_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepoRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/get-public-key": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Get Public Key",
                "operationId": "get_public_key_api_v1_admin_github_get_public_key_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepoRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/list-pull-requests": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "List Pull Requests",
                "operationId": "list_pull_requests_api_v1_admin_github_list_pull_requests_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepoRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/merge-branch": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Merge Branch",
                "operationId": "merge_branch_api_v1_admin_github_merge_branch_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MergeBranchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/merge-pull-request": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Merge Pull Request",
                "operationId": "merge_pull_request_api_v1_admin_github_merge_pull_request_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PullRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/read-file": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Read File",
                "operationId": "read_file_api_v1_admin_github_read_file_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/github/update-branch-protection": {
            "post": {
                "tags": [
                    "GitHub"
                ],
                "summary": "Update Branch Protection",
                "operationId": "update_branch_protection_api_v1_admin_github_update_branch_protection_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBranchProtectionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/dbt/github-project": {
            "post": {
                "tags": [
                    "dbt"
                ],
                "summary": "Create Dbt Github Project",
                "operationId": "create_dbt_github_project_api_v1_admin_dbt_github_project_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DbtProjectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BranchRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "branch": {
                        "type": "string",
                        "title": "Branch"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "branch"
                ],
                "title": "BranchRequest"
            },
            "ConnectionCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type",
                    "details"
                ],
                "title": "ConnectionCreate",
                "description": "Model for creating a new dbt Cloud project connection."
            },
            "ConnectionUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Type"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "title": "ConnectionUpdate",
                "description": "Model for updating a dbt Cloud project connection."
            },
            "CreateBranchRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "parent_branch": {
                        "type": "string",
                        "title": "Parent Branch"
                    },
                    "branch_name": {
                        "type": "string",
                        "title": "Branch Name"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "parent_branch",
                    "branch_name"
                ],
                "title": "CreateBranchRequest"
            },
            "CreateFileRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "branch": {
                        "type": "string",
                        "title": "Branch"
                    },
                    "commit_message": {
                        "type": "string",
                        "title": "Commit Message"
                    },
                    "file_name": {
                        "type": "string",
                        "title": "File Name"
                    },
                    "file_content": {
                        "type": "string",
                        "title": "File Content"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "branch",
                    "commit_message",
                    "file_name",
                    "file_content"
                ],
                "title": "CreateFileRequest"
            },
            "CreatePullRequestRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "parent_branch": {
                        "type": "string",
                        "title": "Parent Branch"
                    },
                    "branch_name": {
                        "type": "string",
                        "title": "Branch Name"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "title",
                    "parent_branch",
                    "branch_name"
                ],
                "title": "CreatePullRequestRequest"
            },
            "CreateSecretRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "secret_name": {
                        "type": "string",
                        "title": "Secret Name"
                    },
                    "secret_value": {
                        "type": "string",
                        "title": "Secret Value"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "secret_name",
                    "secret_value"
                ],
                "title": "CreateSecretRequest"
            },
            "CredentialCreate": {
                "properties": {
                    "project_id": {
                        "type": "integer",
                        "title": "Project Id",
                        "description": "The ID of the project"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "The type of the credential"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "The details of the credential"
                    }
                },
                "type": "object",
                "required": [
                    "project_id",
                    "type",
                    "details"
                ],
                "title": "CredentialCreate"
            },
            "CredentialUpdate": {
                "properties": {
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details",
                        "description": "The details of the credential"
                    }
                },
                "type": "object",
                "title": "CredentialUpdate"
            },
            "DatabaseDetails": {
                "properties": {
                    "warehouse": {
                        "type": "string",
                        "title": "Warehouse"
                    },
                    "database": {
                        "type": "string",
                        "title": "Database"
                    },
                    "schema_": {
                        "type": "string",
                        "title": "Schema"
                    }
                },
                "type": "object",
                "required": [
                    "warehouse",
                    "database",
                    "schema_"
                ],
                "title": "DatabaseDetails"
            },
            "DbtProjectRequest": {
                "properties": {
                    "project_name": {
                        "type": "string",
                        "title": "Project Name"
                    }
                },
                "type": "object",
                "required": [
                    "project_name"
                ],
                "title": "DbtProjectRequest"
            },
            "DeleteBranchRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "branch_name": {
                        "type": "string",
                        "title": "Branch Name"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "branch_name"
                ],
                "title": "DeleteBranchRequest"
            },
            "EntitlementRequest": {
                "properties": {
                    "project_name": {
                        "type": "string",
                        "title": "Project Name"
                    },
                    "pims_name": {
                        "type": "string",
                        "title": "Pims Name"
                    },
                    "service_manager_id": {
                        "type": "string",
                        "title": "Service Manager Id"
                    },
                    "technical_contact_id": {
                        "type": "string",
                        "title": "Technical Contact Id"
                    }
                },
                "type": "object",
                "required": [
                    "project_name",
                    "pims_name",
                    "service_manager_id",
                    "technical_contact_id"
                ],
                "title": "EntitlementRequest"
            },
            "EntitlementResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "details": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Details",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "message"
                ],
                "title": "EntitlementResponse"
            },
            "EnvironmentCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the environment"
                    },
                    "dbt_version": {
                        "type": "string",
                        "title": "Dbt Version",
                        "description": "The dbt version for the environment"
                    },
                    "project_id": {
                        "type": "integer",
                        "title": "Project Id",
                        "description": "The ID of the project"
                    },
                    "credential_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Credential Id",
                        "description": "The ID of the credential"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "dbt_version",
                    "project_id"
                ],
                "title": "EnvironmentCreate"
            },
            "EnvironmentUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "The name of the environment"
                    },
                    "dbt_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dbt Version",
                        "description": "The dbt version for the environment"
                    }
                },
                "type": "object",
                "title": "EnvironmentUpdate"
            },
            "FileRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "file_name": {
                        "type": "string",
                        "title": "File Name"
                    },
                    "ref": {
                        "type": "string",
                        "title": "Ref",
                        "default": "main"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "file_name"
                ],
                "title": "FileRequest"
            },
            "GroupCreate": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "GroupCreate",
                "description": "Model for creating a new permission group.\n\nAttributes:\n    id: Unique name for the group/role"
            },
            "GroupUpdate": {
                "properties": {
                    "permissions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Permissions"
                    }
                },
                "type": "object",
                "required": [
                    "permissions"
                ],
                "title": "GroupUpdate",
                "description": "Model for updating an existing permission group.\n\nAttributes:\n    permissions: List of permissions to assign to the group"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Infra": {
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/InfraAction"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/InfraEnvironment"
                    },
                    "business_area": {
                        "$ref": "#/components/schemas/InfraBusinessArea"
                    },
                    "object_type": {
                        "$ref": "#/components/schemas/InfraObjectType"
                    },
                    "object_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Object Name"
                    },
                    "override_dry_run": {
                        "type": "boolean",
                        "title": "Override Dry Run",
                        "default": false
                    },
                    "confirm_destroy": {
                        "type": "boolean",
                        "title": "Confirm Destroy",
                        "default": false
                    },
                    "github_repo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Github Repo"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "environment",
                    "business_area",
                    "object_type"
                ],
                "title": "Infra"
            },
            "InfraAction": {
                "type": "string",
                "enum": [
                    "plan",
                    "apply",
                    "teardown"
                ],
                "title": "InfraAction"
            },
            "InfraBusinessArea": {
                "type": "string",
                "enum": [
                    "cl",
                    "claims",
                    "corporate",
                    "crm",
                    "it",
                    "pl"
                ],
                "title": "InfraBusinessArea"
            },
            "InfraEnvironment": {
                "type": "string",
                "enum": [
                    "DEV",
                    "QA",
                    "PROD"
                ],
                "title": "InfraEnvironment"
            },
            "InfraObjectType": {
                "type": "string",
                "enum": [
                    "database",
                    "warehouse",
                    "storage_integration",
                    "cicd_combined"
                ],
                "title": "InfraObjectType"
            },
            "JobCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the job"
                    },
                    "project_id": {
                        "type": "integer",
                        "title": "Project Id",
                        "description": "The ID of the project"
                    },
                    "environment_id": {
                        "type": "integer",
                        "title": "Environment Id",
                        "description": "The ID of the environment"
                    },
                    "execute_steps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Execute Steps",
                        "description": "The commands to execute in the job"
                    },
                    "dbt_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dbt Version",
                        "description": "The dbt version for the job"
                    },
                    "triggers": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object",
                        "title": "Triggers",
                        "description": "The triggers for the job"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings",
                        "description": "The settings for the job"
                    },
                    "state": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "State",
                        "description": "The state of the job",
                        "default": 1
                    },
                    "generate_docs": {
                        "type": "boolean",
                        "title": "Generate Docs",
                        "description": "Whether to generate docs",
                        "default": false
                    },
                    "run_generate_sources": {
                        "type": "boolean",
                        "title": "Run Generate Sources",
                        "description": "Whether to run generate sources",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "project_id",
                    "environment_id",
                    "execute_steps",
                    "triggers"
                ],
                "title": "JobCreate"
            },
            "JobUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "The name of the job"
                    },
                    "dbt_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dbt Version",
                        "description": "The dbt version for the job"
                    },
                    "execute_steps": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Execute Steps",
                        "description": "The commands to execute in the job"
                    },
                    "triggers": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "boolean"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Triggers",
                        "description": "The triggers for the job"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings",
                        "description": "The settings for the job"
                    },
                    "state": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "State",
                        "description": "The state of the job"
                    },
                    "generate_docs": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Generate Docs",
                        "description": "Whether to generate docs"
                    },
                    "run_generate_sources": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Run Generate Sources",
                        "description": "Whether to run generate sources"
                    }
                },
                "type": "object",
                "title": "JobUpdate"
            },
            "LicenseMapCreate": {
                "properties": {
                    "license_type": {
                        "type": "string",
                        "title": "License Type"
                    },
                    "group_id": {
                        "type": "integer",
                        "title": "Group Id"
                    }
                },
                "type": "object",
                "required": [
                    "license_type",
                    "group_id"
                ],
                "title": "LicenseMapCreate",
                "description": "Model for creating a new license mapping.\n\nAttributes:\n    license_type: The license type (developer, read-only, etc.)\n    group_id: The group ID to associate with this license type"
            },
            "LicenseMapUpdate": {
                "properties": {
                    "license_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "License Type"
                    },
                    "group_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Group Id"
                    }
                },
                "type": "object",
                "title": "LicenseMapUpdate",
                "description": "Model for updating an existing license mapping.\n\nAttributes:\n    license_type: Optional updated license type\n    group_id: Optional updated group ID"
            },
            "MergeBranchRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "base": {
                        "type": "string",
                        "title": "Base"
                    },
                    "branch_name": {
                        "type": "string",
                        "title": "Branch Name"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "base",
                    "branch_name",
                    "message"
                ],
                "title": "MergeBranchRequest"
            },
            "ProjectCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the dbt project"
                    },
                    "dbt_project_subdirectory": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dbt Project Subdirectory",
                        "description": "The subdirectory of the dbt project"
                    },
                    "repository_id": {
                        "type": "integer",
                        "title": "Repository Id",
                        "description": "The ID of the repository"
                    },
                    "connection_id": {
                        "type": "integer",
                        "title": "Connection Id",
                        "description": "The ID of the connection"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "repository_id",
                    "connection_id"
                ],
                "title": "ProjectCreate"
            },
            "ProjectUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "The name of the dbt project"
                    },
                    "dbt_project_subdirectory": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dbt Project Subdirectory",
                        "description": "The subdirectory of the dbt project"
                    }
                },
                "type": "object",
                "title": "ProjectUpdate"
            },
            "ProvisionInfraResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "ProvisionInfraResponse"
            },
            "PullRequestRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "parent_branch": {
                        "type": "string",
                        "title": "Parent Branch"
                    },
                    "branch_name": {
                        "type": "string",
                        "title": "Branch Name"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "title",
                    "parent_branch",
                    "branch_name"
                ],
                "title": "PullRequestRequest"
            },
            "RepoRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    }
                },
                "type": "object",
                "required": [
                    "repo"
                ],
                "title": "RepoRequest"
            },
            "RepositoryCreate": {
                "properties": {
                    "project_id": {
                        "type": "integer",
                        "title": "Project Id",
                        "description": "The ID of the project"
                    },
                    "remote_url": {
                        "type": "string",
                        "title": "Remote Url",
                        "description": "The remote URL of the repository"
                    },
                    "git_clone_strategy": {
                        "type": "string",
                        "title": "Git Clone Strategy",
                        "description": "The git clone strategy",
                        "default": "deploy_key"
                    }
                },
                "type": "object",
                "required": [
                    "project_id",
                    "remote_url"
                ],
                "title": "RepositoryCreate"
            },
            "RepositoryUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "The name of the repository"
                    },
                    "remote_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Remote Url",
                        "description": "The remote URL of the repository"
                    }
                },
                "type": "object",
                "title": "RepositoryUpdate"
            },
            "SSOGroupMapping": {
                "properties": {
                    "sso_group_name": {
                        "type": "string",
                        "title": "Sso Group Name"
                    },
                    "group_name": {
                        "type": "string",
                        "title": "Group Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "sso_group_name",
                    "group_name"
                ],
                "title": "SSOGroupMapping",
                "description": "Model for mapping SSO provider groups to dbt Cloud groups."
            },
            "SSOGroupUpdate": {
                "properties": {
                    "sso_group_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sso Group Name"
                    },
                    "group_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Group Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "title": "SSOGroupUpdate",
                "description": "Model for updating an existing SSO group mapping."
            },
            "SecretRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "secret_name": {
                        "type": "string",
                        "title": "Secret Name"
                    },
                    "secret_value": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secret Value"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "secret_name"
                ],
                "title": "SecretRequest"
            },
            "ServiceTokenCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the service token"
                    },
                    "permissions": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Permissions",
                        "description": "A list of permission IDs for the service token"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "permissions"
                ],
                "title": "ServiceTokenCreate"
            },
            "ServiceTokenUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "The name of the service token"
                    },
                    "permissions": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Permissions",
                        "description": "A list of permission IDs for the service token"
                    }
                },
                "type": "object",
                "title": "ServiceTokenUpdate"
            },
            "SnowflakeConnectionRequest": {
                "properties": {
                    "user": {
                        "type": "string",
                        "title": "User"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "env": {
                        "type": "string",
                        "title": "Env"
                    },
                    "extra": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Extra",
                        "default": {}
                    }
                },
                "type": "object",
                "required": [
                    "user",
                    "password",
                    "env"
                ],
                "title": "SnowflakeConnectionRequest"
            },
            "UpdateBranchProtectionRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "branch_name": {
                        "type": "string",
                        "title": "Branch Name"
                    },
                    "team": {
                        "type": "string",
                        "title": "Team"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "branch_name",
                    "team"
                ],
                "title": "UpdateBranchProtectionRequest"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "User's unique object ID from Entra ID"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "User's email address"
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Roles",
                        "description": "List of roles assigned to the user"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "title": "Is Admin",
                        "description": "Whether the user has admin privileges",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email"
                ],
                "title": "User",
                "description": "Represents a user in the system with authentication and authorization details.\n\nAttributes:\n    id: User's unique object ID from Entra ID\n    email: User's email address\n    roles: List of role/group IDs assigned to the user\n    is_admin: Whether the user has admin privileges"
            },
            "UserInvite": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name"
                    },
                    "last_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Name"
                    },
                    "group_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Group Ids",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "UserInvite",
                "description": "Model for inviting users to dbt Cloud."
            },
            "UserInviteBatch": {
                "properties": {
                    "invites": {
                        "items": {
                            "$ref": "#/components/schemas/UserInvite"
                        },
                        "type": "array",
                        "title": "Invites"
                    }
                },
                "type": "object",
                "required": [
                    "invites"
                ],
                "title": "UserInviteBatch",
                "description": "Model for batch inviting users to dbt Cloud."
            },
            "UserUpdate": {
                "properties": {
                    "roles": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Roles"
                    },
                    "is_admin": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Admin"
                    }
                },
                "type": "object",
                "title": "UserUpdate",
                "description": "Model for updating an existing user.\n\nAttributes:\n    roles: Optional list of role/group IDs to assign to the user\n    is_admin: Optional flag to set admin privileges"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "VariableRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "variable_name": {
                        "type": "string",
                        "title": "Variable Name"
                    },
                    "variable_value": {
                        "type": "string",
                        "title": "Variable Value"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "variable_name",
                    "variable_value"
                ],
                "title": "VariableRequest"
            },
            "VerifyDatabaseInputRequest": {
                "properties": {
                    "env": {
                        "type": "string",
                        "title": "Env"
                    },
                    "user": {
                        "type": "string",
                        "title": "User"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "database_details": {
                        "$ref": "#/components/schemas/DatabaseDetails"
                    }
                },
                "type": "object",
                "required": [
                    "env",
                    "user",
                    "password",
                    "database_details"
                ],
                "title": "VerifyDatabaseInputRequest"
            },
            "WebhookCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the webhook"
                    },
                    "client_url": {
                        "type": "string",
                        "title": "Client Url",
                        "description": "The client URL for the webhook"
                    },
                    "event_types": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Event Types",
                        "description": "The event types for the webhook"
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Whether the webhook is active",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "client_url"
                ],
                "title": "WebhookCreate"
            },
            "WebhookUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "The name of the webhook"
                    },
                    "client_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Url",
                        "description": "The client URL for the webhook"
                    },
                    "event_types": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Event Types",
                        "description": "The event types for the webhook"
                    },
                    "active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Active",
                        "description": "Whether the webhook is active"
                    }
                },
                "type": "object",
                "title": "WebhookUpdate"
            },
            "WorkflowDispatchRequest": {
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo"
                    },
                    "workflow_id": {
                        "type": "string",
                        "title": "Workflow Id"
                    },
                    "ref": {
                        "type": "string",
                        "title": "Ref"
                    },
                    "inputs": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Inputs"
                    }
                },
                "type": "object",
                "required": [
                    "repo",
                    "workflow_id",
                    "ref",
                    "inputs"
                ],
                "title": "WorkflowDispatchRequest"
            }
        }
    }
}